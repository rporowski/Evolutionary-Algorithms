% Definicja danych wejściowych (punkty i ich wartości funkcji celu)
X = [2, 3;
     5, 6;
     1, 4;
     3, 1;
     4, 4;
     5, 3;
     1, 2];

f_values = [1, 3;
            3, 8;
           10, 3;
            6, 15;
            2, 2;
            4, 7;
            9, 2];

% Liczba punktów
num_points = size(X, 1);

% Inicjalizacja zbioru Pareto (indeksów niedominowanych punktów)
pareto_indices = true(num_points, 1);

% Sprawdzenie dominacji
for i = 1:num_points
    for j = 1:num_points
        if i ~= j
            % Sprawdzenie warunków 2.9 i 2.10
            if all(f_values(i, :) <= f_values(j, :)) && any(f_values(i, :) < f_values(j, :))
                % Punkt j jest zdominowany przez punkt i
                pareto_indices(j) = false;
            end
        end
    end
end

% Wybór punktów zbioru Pareto
pareto_X = X(pareto_indices, :);
pareto_f_values = f_values(pareto_indices, :);

% Wyświetlenie wyników
disp('Zbiór Pareto (punkty X):');
disp(pareto_X);
disp('Front Pareto (wartości funkcji celu):');
disp(pareto_f_values);

% Wizualizacja wyników
figure;
hold on;
scatter(f_values(:, 1), f_values(:, 2), 'bo', 'DisplayName', 'Kandydackie rozwiązania');
scatter(pareto_f_values(:, 1), pareto_f_values(:, 2), 'ro', 'filled', 'DisplayName', 'Front Pareto');
xlabel('f_1(x)');
ylabel('f_2(x)');
title('Wizualizacja kandydackich rozwiązań i frontu Pareto');
legend;
grid on;
hold off;
